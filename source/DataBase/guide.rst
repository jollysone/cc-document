####################################################################################################
**基本使用方法**
####################################################################################################

******************************************************************************************
**用前须知**
******************************************************************************************

.. note:: 
    **须知1：** 由于业务场景的需要，在所有的 ``Model`` 类查询中均会自动加入条件  ``'com_id' = '10'`` , 即为对应登录账号的公司号。

    且 ``where`` 条件会固定写入 ``1`` 。(此说明可以忽略)

    如 ``ListModel`` 生成的语句：

    .. code-block:: mysql
        
        select * from users where 1 and (  `com_id`='10' );


.. note:: 
    **须知2：** 在 ``ItemModel::make('user')`` 中 ``'user'`` 是数据库表名( **t_user** ), 默认是不写前缀 ``t_``。

    .. code-block:: php
        :emphasize-lines: 2

        <?php
            ItemModel::make('user')
                ->execute();
        ?>


.. note:: 
    **须知3：** 语句最后必须执行 ``->execute()`` 方法，否则只能生成对象，语句并不执行。

    .. code-block:: php
        :emphasize-lines: 3

        <?php
            ItemModel::make('table_name')
                ->execute();
        ?>


.. note:: 
    **须知4：** 如语句出现 ``?`` 这是因为数据库使用的是 ``PDO`` 的方式且通过传参对应到具体值上：

    .. code-block:: mysql
        
        insert into table_name (id, name,...) VALUES (?, ?,....);

        Params:(
            'id' => 1,
            'name' => 'jollysone'
        )


.. note:: 
    **须知5：** 所有条件控制的可选参数 ``$op`` 都会把可选参数拼接到条件的前面, 而非后面。


******************************************************************************************
**查询数据**
******************************************************************************************

================================================================================
**查询单条数据**
================================================================================

查询单条数据使用 ``ItemModel`` 类，如下：

.. code-block:: php
    :linenos:

    <?php
        ItemModel::make('table_name')->execute();
    ?>

返回结构如下：

.. code-block:: php
    :linenos:

    array (
        ':qp0' => 1,
        ':qp1' => 'jollysone'
    )

================================================================================
**查询多条数据**
================================================================================

查询单条数据使用 ``ListModel`` 类，如下：

.. code-block:: php
    :linenos:

    <?php
        ListModel::make('table_name')->execute();
    ?>

返回结构如下：

.. code-block:: php
    :linenos:

    array (
        0 => array (
            'id' => 1,
            'name' => 'jollysone'
        ),
        1 => array (
            'id' => 3,
            'name' => 'hermit'
        )
        2 => array (
            'id' => 4,
            'name' => 'lixu'
        )
    )

******************************************************************************************
**添加数据**
******************************************************************************************

================================================================================
**添加单条数据**
================================================================================

查询单条数据使用 ``InsertModel`` 类的 ``addData()`` 方法，如下：

.. code-block:: php
    :linenos:
    :emphasize-lines: 3-7

    <?php
        InsertModel::make('table_name')
            ->addData([
                'name' => 'jollysone',
                'age' => 24,
                'sex' => 1
            ])
            ->execute();
    ?>
    

返回结构如下：

.. code-block:: php

    bool (false) 或 int (n)

================================================================================
**添加多条数据**
================================================================================

查询单条数据使用 ``InsertModel`` 类的 ``addDatas()`` 方法，如下：

.. code-block:: php
    :linenos:
    :emphasize-lines: 3-14

    <?php
        InsertModel::make('table_name')
            ->addDatas([
            [
                    'name' => 'jollysone',
                    'age' => 24,
                    'sex' => 1
            ],
            [
                    'name' => 'hermit',
                    'age' => 28,
                    'sex' => 1
            ]
            ])
            ->execute();
    ?>
    

返回结构如下：

.. code-block:: php

    bool (true)
    bool (false)

******************************************************************************************
**更新数据**
******************************************************************************************

更新数据使用 ``UpdateModel`` 类的 ``addData()`` 方法更新数据，同时需要增加需要更新哪一条的条件，否则就更新全部，如下：

.. code-block:: php
    :linenos:
    :emphasize-lines: 3

    <?php
        UpdateModel::make('table_name')
            ->addColumn('id', 1)
            ->addData([
                'name' => 'jollysone',
                'age' => 24,
                'sex' => 1
            ])
            ->execute();
    ?>

更新原子数据使用 ``IncrementModel`` 类的 ``addData()`` 方法更新数据，同时需要增加需要更新哪一条的条件，否则就更新全部，如下：

.. code-block:: php
    :linenos:
    :emphasize-lines: 3

    <?php
        IncrementModel::make('table_name')
            ->addColumn('id', 1)
            ->addData([
                'num' => 1,
                'surplus' => -1,
            ])
            ->execute();
        
        // update table_name set num = num + 1, surplus = surplus + -1 where id = 1
    ?>

返回结构如下：

.. code-block:: php

    bool (true)
    bool (false)

******************************************************************************************
**删除数据**
******************************************************************************************

删除数据使用 ``DeleteModel`` 类即可，只需要添加删除的控制条件即可，否则就删除全部，如下：

.. code-block:: php
    :linenos:
    :emphasize-lines: 3

    <?php
        DeleteModel::make('table_name')
            ->addColumn('id', 1)
            ->execute();
    ?>
    

返回结构如下：

.. code-block:: php

    bool (true)
    bool (false)







******************************************************************************************
**条件控制**
******************************************************************************************


================================================================================
**addColumn()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addColumn(** $name, $value, $compare = '=' **)**

**例1：** 查询条件为 ``'id' = '10'`` 的数据。如需  ``'id' > '10'`` , 可配置第三个参数。

.. code-block:: php
    :linenos:
    :emphasize-lines: 3

    <?php
        ItemModel::make('table_name')
            ->addColumn('id', '10')
            ->execute();
    ?>
    



================================================================================
**addColumnsCondition()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addColumnsCondition(** $array, $op = 'and' **)**

**例1：** 查询条件为 ``'id' = '10'`` 且 ``'name' = 'jollysone'`` 的数据。如需  ``'id' = '10'`` 或 ``'name' = 'jollysone'`` , 可配置第二个参数为 ``'or'`` 。

.. code-block:: php
    :linenos:
    :emphasize-lines: 3-6

    <?php
        ItemModel::make('table_name')
            ->addColumnsCondition([
                'id' => '10',
                'name' => 'jollysone'
            ])
            ->execute();
    ?>
    

**例2：** 查询条件为包含 ``'id' = 1`` 、 ``'id' = 2`` 、 ``'id' = 3`` 且 ``'name' = 'jollysone'`` 的数据。

.. code-block:: php
    :linenos:
    :emphasize-lines: 3-6

    <?php
        ItemModel::make('table_name')
            ->addColumnsCondition([
                'id' => ['in', [1, 2, 3]],
                'name' => 'jollysone'
            ])
            ->execute();
    ?>
    


================================================================================
**addStrCondition()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addStrCondition(** $conditionstr, $params = array(), $op = 'and' **)**

**例1：** 查询条件为 ``'id' = '10'`` 的数据, 直接拼接SQL语句，比较灵活，一般根据场景用于复杂的语句使用, 尽量使用其他已有的封装。 ``$params`` 是用于PDO传参的方式, 能对应参数传入。

.. code-block:: php
    :linenos:
    :emphasize-lines: 3,5,8-12

    <?php
        ItemModel::make('table_name')
            ->addStrCondition('id = 10')
            ->execute();

        // PDO 传参会对应 ? 先后和一维数组先后传参进去
        ItemModel::make('table_name')
            ->addStrCondition('id = ? and name = ? and age = ?', [
                '10',
                'jollysone',
                '24'
            ])
            ->execute();
    ?>
    


================================================================================
**addInCondition()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addInCondition(** $name, $array, $op = 'and' **)**

**例1：** 查询条件为包含 ``'id' = 1`` 、 ``'id' = 2`` 、 ``'id' = 3`` 的数据。

.. code-block:: php
    :linenos:
    :emphasize-lines: 3

    <?php
        ItemModel::make('table_name')
            ->addInCondition('id', ['in', [1, 2, 3]])
            ->execute();
    ?>
    


================================================================================
**addConditions()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addConditions(** array $conditions **)**

**例1：** 查询条件不包含公司号。更多 **Conditions** 请查看 Conditions 相关章节。

.. code-block:: php
    :linenos:
    :emphasize-lines: 3-5

    <?php
        ItemModel::make('table_name')
            ->addConditions([
                new NoComidCondition()
            ])
            ->execute();
    ?>
    
            
================================================================================
**addData()**
================================================================================

**适用：** ``UPDATE``

**参数：** **addData(** $data,$id = null **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addData()**
================================================================================

**适用：** ``INSERT``

**参数：** addData($data)

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>


================================================================================
**addDatas()**
================================================================================

**适用：** ``INSERT``

**参数：** **addDatas(** $datas **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>


================================================================================
**addLikeCondition()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addLikeCondition(** $name, $value, $op = 'and' **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>


================================================================================
**addDataEx()**
================================================================================

**适用：** ``UPDATE``

**参数：** **addDataEx(** $key, $value **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addSelect()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addSelect(** $columns **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addOrMultiColumnsCondtion()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addOrMultiColumnsCondtion(** $array1, $array2 **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addFilterColumn()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addFilterColumn(** $name, $value, $compare = '=' **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addFilterColumnsCondition()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addFilterColumnsCondition(** $array, $op = 'and' **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addForUpdate()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addForUpdate()**

**例1：** 

.. code-block:: php
    :linenos:

    <?php

    ?>

================================================================================
**addGroup()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addGroup(** $columns **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addId()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addId(** $id, $filed = 'id' **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addNoConditionInterceptors()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addNoConditionInterceptors(** array $noConditionInterceptors **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addOrder()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addOrder(** $columns **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>

================================================================================
**addImpossibility()**
================================================================================

**适用：** ``SELECT``  ``UPDATE``  ``DELETE``

**参数：** **addImpossibility()**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>


================================================================================
**addNoGlobalInsertBeforeInterceptors()**
================================================================================

**适用：** ``INSERT``

**参数：** **addNoGlobalInsertBeforeInterceptors(** array $insertBeforeInterceptorNames **)**

**例1：** 

.. code-block:: php
    :linenos:

    <?php      ?>
