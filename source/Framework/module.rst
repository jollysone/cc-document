####################################################################################################
**模块设计**
####################################################################################################

******************************************************************************************
**各服务器切换设计**
******************************************************************************************

在开发服测试时，需要 ``Debug`` 测试服的数据时，只需在登录时，在URL追加参数 ``&__for_test=1`` 再回到开发服时即可。

******************************************************************************************
**会话认证设计**
******************************************************************************************

尚未完善

******************************************************************************************
**加密设计**
******************************************************************************************

貌似均采用 ``AES`` 加密。尚未完善。

******************************************************************************************
**反射注入设计**
******************************************************************************************

所有继承 ``CAction`` 控制器的其它控制器, 都可以定义任何 ``类属性`` 来映射 ``Request 参数`` 。

如：A 继承了 ``CAction`` , A 类中有属性 ``id`` , 则如果有 ``Request 参数`` 的传入（包括GET/POST等）, 则此属性会通过参数映射过来, 则此时属性就存储了 ``Request 参数`` 。

******************************************************************************************
**依赖注入设计**
******************************************************************************************

protected function getCheckers()
{
    return [
        new EmailChecker('sponsor', 'xxx'), // 验证经纬度和地址
    ];
}

$this->dbCondition->addConditions([
    new LikeCondition('search_key', ['t.task_num', 't.address', 't.content']),
]);


public function onBuild($dbCondition, \CRequest $request)
{
    
}

******************************************************************************************
**数据假删除设计**
******************************************************************************************

数据假删除需要在表中增加一个字段 ``is_del`` , ``is_del = 1`` 为已删除, ``is_del = 0`` 反之。

如需假删除, 需要 字段 ``is_del`` , 否则会导致框架内的某些地方不可用。


******************************************************************************************
**路由分组模块设计**
******************************************************************************************

登录  是面向分组的

分组是可以自定义的
常见的group有admin,api,cmd,xbwqLink

显式地声明某个Action支持的分组
php
protected function supportGroups() {
return 'admin,api,cmd,xbwqLink';
}

******************************************************************************************
**公司拦截器分组设计**
******************************************************************************************

调用Model进行的数据库操作, 都会自动加上当前com_id

ListAction, SaveAction 帮你写的查询都受com_id拦截器影响

******************************************************************************************
**视图设计**
******************************************************************************************

ListAction, SaveAction 默认都是加载布局文件的

SaveAction

SaveAction 用于这样的场景：
主键字段叫id的1条数据

2种数据操作场景：新增数据 和 编辑数据

ListModel

ListModel返回的数据结构如下

[    
    ['id' => 1, 'name' => 'xxx']
]
没查询到数据，返回空数组

ItemModel

ItemModel返回的数据结构如下

['id' => 1, 'name'=>'xxx']
没查询到数据，返回false

视图文件

如果ListAction的getIsSingle()返回true，视图文件可以直接使用数据库字段名所对应的变量名